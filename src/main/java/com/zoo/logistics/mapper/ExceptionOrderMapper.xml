<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="com.zoo.logistics.mapper.ExceptionOrderMapper" >
  <resultMap id="BaseResultMap" type="com.zoo.logistics.entity.ExceptionOrder" >
    <id column="id" property="id" jdbcType="INTEGER" />
    <result column="order_id" property="orderId" jdbcType="VARCHAR" />
    <result column="exception_category_id" property="exceptionCategoryId" jdbcType="INTEGER" />
    <result column="compensate" property="compensate" jdbcType="REAL" />
  </resultMap>
  <sql id="Base_Column_List" >
    id, order_id, exception_category_id, compensate
  </sql>
  <select id="selectByPrimaryKey" resultMap="BaseResultMap" parameterType="java.lang.Integer" >
    select 
    <include refid="Base_Column_List" />
    from exception_order
    where id = #{id,jdbcType=INTEGER}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer" >
    delete from exception_order
    where id = #{id,jdbcType=INTEGER}
  </delete>
  <insert id="insert" parameterType="com.zoo.logistics.entity.ExceptionOrder" >
    insert into exception_order (id, order_id, exception_category_id, 
      compensate)
    values (#{id,jdbcType=INTEGER}, #{orderId,jdbcType=VARCHAR}, #{exceptionCategoryId,jdbcType=INTEGER}, 
      #{compensate,jdbcType=REAL})
  </insert>
  <insert id="insertSelective" parameterType="com.zoo.logistics.entity.ExceptionOrder" >
    insert into exception_order
    <trim prefix="(" suffix=")" suffixOverrides="," >
      <if test="id != null" >
        id,
      </if>
      <if test="orderId != null" >
        order_id,
      </if>
      <if test="exceptionCategoryId != null" >
        exception_category_id,
      </if>
      <if test="compensate != null" >
        compensate,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides="," >
      <if test="id != null" >
        #{id,jdbcType=INTEGER},
      </if>
      <if test="orderId != null" >
        #{orderId,jdbcType=VARCHAR},
      </if>
      <if test="exceptionCategoryId != null" >
        #{exceptionCategoryId,jdbcType=INTEGER},
      </if>
      <if test="compensate != null" >
        #{compensate,jdbcType=REAL},
      </if>
    </trim>
  </insert>
  <update id="updateByPrimaryKeySelective" parameterType="com.zoo.logistics.entity.ExceptionOrder" >
    update exception_order
    <set >
      <if test="orderId != null" >
        order_id = #{orderId,jdbcType=VARCHAR},
      </if>
      <if test="exceptionCategoryId != null" >
        exception_category_id = #{exceptionCategoryId,jdbcType=INTEGER},
      </if>
      <if test="compensate != null" >
        compensate = #{compensate,jdbcType=REAL},
      </if>
    </set>
    where id = #{id,jdbcType=INTEGER}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.zoo.logistics.entity.ExceptionOrder" >
    update exception_order
    set order_id = #{orderId,jdbcType=VARCHAR},
      exception_category_id = #{exceptionCategoryId,jdbcType=INTEGER},
      compensate = #{compensate,jdbcType=REAL}
    where id = #{id,jdbcType=INTEGER}
  </update>
</mapper>